# Generated by Django 3.0.3 on 2020-02-07 09:47

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_start', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='HourSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour_number', models.IntegerField()),
                ('starts_at', models.TimeField()),
                ('ends_at', models.TimeField()),
                ('day_of_week', models.CharField(choices=[('Monday', 0), ('Tuesday', 1), ('Wednesday', 2), ('Thursday', 3), ('Friday', 4), ('Saturday', 5), ('Sunday', 6)], max_length=32)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Timetable.School')),
                ('school_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Timetable.SchoolYear')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('section', models.CharField(max_length=256)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Timetable.School')),
                ('school_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Timetable.SchoolYear')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('myuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Timetable.MyUser')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Timetable.School')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('Timetable.myuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminSchool',
            fields=[
                ('myuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Timetable.MyUser')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Timetable.School')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('Timetable.myuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
